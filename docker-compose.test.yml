# docker-compose.test.yml
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.test
    ports:
      - '3000:3000' # For your main application
      - '3001:3001' # For WebSocket server
    environment:
      NODE_ENV: test
      PORT: 3000
      REDIS_URL: redis://redis:6379
      SCOKET_PORT: 3001
      MONGODB_URL: ${MONGODB_URL}
      SENDER_EMAIL: ${SENDER_EMAIL}
      SEND_GRID_API_KEY: ${SEND_GRID_API_KEY}
      JWT_SECRET: ${JWT_SECRET}
      COOKIE_SECRET: ${COOKIE_SECRET}
      JWT_COOKIE_EXPIRES_IN: ${JWT_COOKIE_EXPIRES_IN}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      GOOGLE_AUTH_CLIENT_ID: ${GOOGLE_AUTH_CLIENT_ID}
      GOOGLE_AUTH_CLIENT_SECRET: ${GOOGLE_AUTH_CLIENT_SECRET}
      GOOGLE_AUTH_CALLBACK_URL: ${GOOGLE_AUTH_CALLBACK_URL}
      FRONTEND_EMAIL_SERVICE_URL: ${FRONTEND_EMAIL_SERVICE_URL}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEB_HOOK_SECRET: ${STRIPE_WEB_HOOK_SECRET}
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL}
      MAILOSAUR_API_KEY: ${MAILOSAUR_API_KEY}
      MAILOSAUR_EMAIL: ${MAILOSAUR_EMAIL}
    volumes:
      - ./src:/usr/src/app/src
    depends_on:
      - redis
      - database

  redis:
    image: redis:latest
    ports:
      - '6379:6379'
  database:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminadmin
      MONGO_INITDB_DATABASE: muuve_test_db
    volumes:
      - mongo_data_test:/data/db
volumes:
  mongo_data_test:
    driver: local
